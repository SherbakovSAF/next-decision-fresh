generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider  = "postgresql"
//   url       = env("DATABASE_URL") // uses connection pooling
//   directUrl = env("DIRECT_URL") // uses a direct connection
// }

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("DIRECT_URL") // uses a direct connection
}

model User_M {
  id           Int     @id @default(autoincrement())
  login        String  @unique
  password     String
  isVerifyMail Boolean @default(false)
  mail         String? @default("")
  fullName     String? @default("")
  refreshToken String? @default("")

  // doubt           Doubt_M[]
  // doubtReaction_M DoubtReaction_M[]

  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  Doubt_M         Doubt_M[]
  DoubtReaction_M DoubtReaction_M[]

  @@map(name: "users")
}

model Doubt_M {
  id             Int               @id @default(autoincrement())
  title          String            @default("")
  dateFinish     DateTime
  userId         Int
  user           User_M            @relation(fields: [userId], references: [id])
  doubtReactions DoubtReaction_M[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map(name: "doubts")
}

enum DoubtReaction_E {
  GOOD
  BAD
  NORMAL
}

model DoubtReaction_M {
  id          Int             @id @default(autoincrement())
  emotionText String          @default("")
  type        DoubtReaction_E @default(NORMAL)
  doubtId     Int
  doubt       Doubt_M         @relation(fields: [doubtId], references: [id])
  userId      Int
  user        User_M          @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map(name: "doubt_reaction")
}
